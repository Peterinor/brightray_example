#!/usr/bin/env python

import os
import subprocess
import sys
import multiprocessing


SOURCE_ROOT = os.path.abspath(os.path.dirname(os.path.dirname(__file__)))
GYP = os.path.join(SOURCE_ROOT, 'vendor', 'brightray', 'vendor', 'gyp', 'gyp_main.py')


def main():
    os.chdir(SOURCE_ROOT)
    run_gyp()
    build()


def run_gyp():
    subprocess.check_call([sys.executable, GYP, '--depth', '.', 'brightray_example.gyp'])


def build():
    if sys.platform == 'darwin':
        subprocess.check_call(['xcodebuild'])
        return
    if sys.platform == 'linux2':
        subprocess.check_call(['make', '-j%d' % multiprocessing.cpu_count()])
        return

    assert sys.platform == 'win32', sys.platform
    program_files = os.environ.get('PROGRAMFILES(X86)', os.environ['PROGRAMFILES'])
    msbuild = os.path.join(program_files, 'MSBuild', '12.0', 'Bin', 'MSBuild.exe')
    subprocess.check_call([msbuild, 'brightray_example.sln'])


if __name__ == '__main__':
    sys.exit(main())
